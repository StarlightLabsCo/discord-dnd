/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const LobbyLazyImport = createFileRoute('/lobby')()
const LobbyCharacterSubraceLazyImport = createFileRoute(
  '/lobby/character/subrace',
)()
const LobbyCharacterRaceLazyImport = createFileRoute('/lobby/character/race')()
const LobbyCharacterOriginLazyImport = createFileRoute(
  '/lobby/character/origin',
)()
const LobbyCharacterClassLazyImport = createFileRoute(
  '/lobby/character/class',
)()
const LobbyCharacterBackgroundLazyImport = createFileRoute(
  '/lobby/character/background',
)()
const LobbyCharacterAbilitiesLazyImport = createFileRoute(
  '/lobby/character/abilities',
)()
const LobbyCharacterLayoutLazyImport = createFileRoute(
  '/lobby/character/_layout',
)()

// Create/Update Routes

const LobbyLazyRoute = LobbyLazyImport.update({
  path: '/lobby',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/lobby.lazy').then((d) => d.Route))

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LobbyCharacterSubraceLazyRoute = LobbyCharacterSubraceLazyImport.update({
  path: '/character/subrace',
  getParentRoute: () => LobbyLazyRoute,
} as any).lazy(() =>
  import('./routes/lobby.character.subrace.lazy').then((d) => d.Route),
)

const LobbyCharacterRaceLazyRoute = LobbyCharacterRaceLazyImport.update({
  path: '/character/race',
  getParentRoute: () => LobbyLazyRoute,
} as any).lazy(() =>
  import('./routes/lobby.character.race.lazy').then((d) => d.Route),
)

const LobbyCharacterOriginLazyRoute = LobbyCharacterOriginLazyImport.update({
  path: '/character/origin',
  getParentRoute: () => LobbyLazyRoute,
} as any).lazy(() =>
  import('./routes/lobby.character.origin.lazy').then((d) => d.Route),
)

const LobbyCharacterClassLazyRoute = LobbyCharacterClassLazyImport.update({
  path: '/character/class',
  getParentRoute: () => LobbyLazyRoute,
} as any).lazy(() =>
  import('./routes/lobby.character.class.lazy').then((d) => d.Route),
)

const LobbyCharacterBackgroundLazyRoute =
  LobbyCharacterBackgroundLazyImport.update({
    path: '/character/background',
    getParentRoute: () => LobbyLazyRoute,
  } as any).lazy(() =>
    import('./routes/lobby.character.background.lazy').then((d) => d.Route),
  )

const LobbyCharacterAbilitiesLazyRoute =
  LobbyCharacterAbilitiesLazyImport.update({
    path: '/character/abilities',
    getParentRoute: () => LobbyLazyRoute,
  } as any).lazy(() =>
    import('./routes/lobby.character.abilities.lazy').then((d) => d.Route),
  )

const LobbyCharacterLayoutLazyRoute = LobbyCharacterLayoutLazyImport.update({
  id: '/character/_layout',
  getParentRoute: () => LobbyLazyRoute,
} as any).lazy(() =>
  import('./routes/lobby.character._layout.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/lobby': {
      preLoaderRoute: typeof LobbyLazyImport
      parentRoute: typeof rootRoute
    }
    '/lobby/character/_layout': {
      preLoaderRoute: typeof LobbyCharacterLayoutLazyImport
      parentRoute: typeof LobbyLazyRoute
    }
    '/lobby/character/abilities': {
      preLoaderRoute: typeof LobbyCharacterAbilitiesLazyImport
      parentRoute: typeof LobbyLazyImport
    }
    '/lobby/character/background': {
      preLoaderRoute: typeof LobbyCharacterBackgroundLazyImport
      parentRoute: typeof LobbyLazyImport
    }
    '/lobby/character/class': {
      preLoaderRoute: typeof LobbyCharacterClassLazyImport
      parentRoute: typeof LobbyLazyImport
    }
    '/lobby/character/origin': {
      preLoaderRoute: typeof LobbyCharacterOriginLazyImport
      parentRoute: typeof LobbyLazyImport
    }
    '/lobby/character/race': {
      preLoaderRoute: typeof LobbyCharacterRaceLazyImport
      parentRoute: typeof LobbyLazyImport
    }
    '/lobby/character/subrace': {
      preLoaderRoute: typeof LobbyCharacterSubraceLazyImport
      parentRoute: typeof LobbyLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  LobbyLazyRoute.addChildren([
    LobbyCharacterAbilitiesLazyRoute,
    LobbyCharacterBackgroundLazyRoute,
    LobbyCharacterClassLazyRoute,
    LobbyCharacterOriginLazyRoute,
    LobbyCharacterRaceLazyRoute,
    LobbyCharacterSubraceLazyRoute,
  ]),
])

/* prettier-ignore-end */
